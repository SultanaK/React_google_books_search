{"version":3,"sources":["Header.js","BookCard.js","BookList.js","SearchBox.js","Books.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","BookCard","props","volumeInfo","info","_props$info$volumeInf","title","authors","thumbNail","subtitle","publishedDate","onSave","hasOwnProperty","imageLinks","thumbnail","publishYear","src","alt","substring","onClick","BookList","books","map","book","src_BookCard","key","id","SearchBox","onSubmit","handleSubmit","onChange","handleChange","placeholder","type","Books","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","preventDefault","request","get","query","q","state","searchField","then","data","console","log","setState","toConsumableArray","body","items","target","value","handleSort","sort","post","send","set","_this2","_this3","filteredBooks","b","parseInt","src_SearchBox","src_BookList","Component","App","src_Header","src_Books","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ce5f44d8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst Header = () => {\n  \n    return (\n      <header>\n        <i className=\"fas fa-book fa-2x\"></i>\n        <h1>Book Cards</h1>\n      </header>\n      \n    );\n}\n\nexport default Header;\n\n\n","import React, { Component } from 'react';\n\n\nconst BookCard = (props) => {\n    const { volumeInfo } = props.info;\n    const {title, authors, subtitle, publishedDate, onSave} = props.info.volumeInfo;\n    const thumbNail = volumeInfo.hasOwnProperty('imageLinks') == false ? \"https://vignette.wikia.nocookie.net/pandorahearts/images/a/ad/Not_available.jpg/revision/latest?cb=20141028171337\" : volumeInfo.imageLinks.thumbnail;\n    const publishYear = volumeInfo.hasOwnProperty('publishedDate') == false ? volumeInfo['publishedDate'] = \"0000\" : volumeInfo.publishedDate;\n\n    return (\n      \n      <div className=\"card-container\">\n        <img src={thumbNail} alt=\"\"/>\n        <div className=\"desc\">\n          <h2>{title}</h2>\n          <h3>Author: {authors}</h3>\n          <p>Published: {publishYear == \"0000\" ? \"Not available\" : publishYear.substring(0,4)}</p>                        \n        </div>\n        <button onClick={() => props.onSave({title: title})}> Save</button>\n      </div>\n      \n      \n    );\n}\n\nexport default BookCard;\n","import React, { Component } from 'react';\nimport BookCard from './BookCard';\n\n\nconst BookList = (props) => {\n    return (\n      <div className=\"list\">\n        {\n          props.books.map((book) => {\n            return <BookCard key={book.id} info={book} onSave={props.onSave} />\n          })\n        }\n      </div>\n      \n    );\n}\n\nexport default BookList;\n","import React, { Component } from 'react';\n\n\nconst SearchBox = (props) => {\n\n    return (\n        <div className=\"search-area\">\n        <form onSubmit={props.handleSubmit}>\n            <input onChange={props.handleChange} placeholder=\"Search books\" type=\"text\"/>\n            <button type=\"submit\">Search</button>\n        </form>\n        </div>\n      \n    );\n}\n\nexport default SearchBox;\n","import React, { Component } from 'react';\nimport BookList from './BookList';\nimport SearchBox from './SearchBox';\nimport request from 'superagent';\n\nclass Books extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            books: [],\n            searchField: '',\n            sort: ''\n        }\n    }\n    componentDidMount() {\n        request\n            .get(\"https://www.googleapis.com/books/v1/volumes\")\n            .query({ q: this.state.searchField })\n            .then((data) => {\n                this.setState({ books: [...data.body.items] })\n            })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        request\n            .get(\"https://www.googleapis.com/books/v1/volumes\")\n            .query({ q: this.state.searchField })\n            .then((data) => {\n                console.log(data);\n                this.setState({ books: [...data.body.items] })   \n            })\n    }\n\n    handleChange = (e) => {\n        this.setState({ searchField: e.target.value })\n    }\n\n    handleSort = (e) => {\n        this.setState({ sort: e.target.value});\n    }\n    onSave = (data) => {\n        //console.log(data)\n  request.post('/api/saved')\n  .send(data) // sends a JSON post body\n  .set('accept', 'json')\n\n    }\n    \n\n    render() {\n        const filteredBooks = this.state.books.sort((a, b) => {\n            if(this.state.sort == 'Newest'){\n                console.log(\"in newest\")\n                return parseInt(b.volumeInfo.publishedDate.substring(0, 4)) - parseInt(a.volumeInfo.publishedDate.substring(0, 4));\n            }\n            else if(this.state.sort == 'Oldest'){\n                return parseInt(a.volumeInfo.publishedDate.substring(0, 4)) - parseInt(b.volumeInfo.publishedDate.substring(0, 4));\n            }\n          \n          return;\n        })\n\n        return (\n            <div className=\"wrapper\">\n                <SearchBox \n                    data={this.state} \n                    handleSubmit={this.handleSubmit} \n                    handleChange={this.handleChange} \n                    handleSort={this.handleSort}\n                />\n                <BookList books={filteredBooks} onSave={this.onSave}/>\n            </div>\n        );\n    }\n}\n\nexport default Books;\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport Books from './Books';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Books />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}